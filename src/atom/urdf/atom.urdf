<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from src/atom/urdf/atom.xacro       | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="atom">
  <!-- How far back the caster wheel is compared to the center of the chassis -->
  <!-- Distance from center to center -->
  <!-- How far down the camera is compared to the center of the chassis -->
  <!-- The distance from the base of the chassis to the base of the LiDAR -->
  <!-- Robot footprint on ground -->
  <link name="robot_footprint"/>
  <!-- Chassis -->
  <link name="chassis">
    <pose>0.536448 -0.130302 0.066802 0 0 0</pose>
    <inertial>
      <mass value="29.9371"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.699" ixy="0" ixz="0" iyy="4.022" iyz="0" izz="4.170"/>
    </inertial>
    <collision name="collision">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.143 0.6096 0.5588"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.143 0.6096 0.5588"/>
      </geometry>
    </visual>
    <collision name="caster_collision">
      <origin rpy=" 0 0 0" xyz="-0.5715 0 -0.38662599999999997"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>1</mu>
            <mu2>1</mu2>
            <slip1>0.5</slip1>
            <slip2>0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name="caster_visual">
      <origin rpy=" 0 0 0" xyz="-0.5715 0 -0.38662599999999997"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </visual>
  </link>
  <link name="right_wheel">
    <inertial>
      <mass value="5"/>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <inertia ixx="0.03506668551166666666666666666667" ixy="0.0" ixz="0.0" iyy="0.03506668551166666666666666666667" iyz="0.0" izz="0.030900018845"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.157226"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.157226"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.3 -0.36 -0.2794"/>
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="right_wheel">
    <material>Gazebo/Green</material>
    <mu1 value="1.0"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <link name="left_wheel">
    <inertial>
      <mass value="5"/>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <inertia ixx="0.03506668551166666666666666666667" ixy="0.0" ixz="0.0" iyy="0.03506668551166666666666666666667" iyz="0.0" izz="0.030900018845"/>
    </inertial>
    <visual>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.157226"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 1.5707963267948966 1.5707963267948966" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.157226"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.3 0.36 -0.2794"/>
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <gazebo reference="left_wheel">
    <material>Gazebo/Green</material>
    <mu1 value="1.0"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <maxVel>1.0</maxVel>
    <minDepth>0.00</minDepth>
  </gazebo>
  <link name="camera">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <link name="camera_link_optical"/>
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.5715 0 -0.2"/>
    <parent link="chassis"/>
    <child link="camera"/>
    <axis xyz="0 1 0"/>
  </joint>
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera"/>
    <child link="camera_link_optical"/>
  </joint>
  <gazebo reference="camera">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="velodyne_base_mount_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.3 0 0.61595"/>
    <parent link="chassis"/>
    <child link="velodyne_base_link"/>
  </joint>
  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="velodyne_base_link"/>
    <child link="velodyne"/>
  </joint>
  <link name="velodyne">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="package://velodyne_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0"/>
      </geometry>
    </collision>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
    <sensor name="velodyne-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>250</samples>
            <resolution>1</resolution>
            <min_angle>-3.141592653589793</min_angle>
            <max_angle>3.141592653589793</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2617993877991494</min_angle>
            <max_angle> 0.2617993877991494</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/points2_1</topicName>
        <frameName>velodyne</frameName>
        <organize_cloud>False</organize_cloud>
        <min_range>0.9</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <!-- IMU -->
  <link name="imu_link"/>
  <!-- IMU Joint -->
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="chassis"/>
    <child link="imu_link"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- Chassis Joint -->
  <joint name="robot_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.43682599999999994"/>
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>
  <!-- Color of bot -->
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>100.0</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>left_wheel_joint</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>right_wheel_joint</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.72</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.314452</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.8</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>30</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>robot_footprint</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>encoder</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
      <rosDebugLevel>na</rosDebugLevel>
      <publishOdomTF>true</publishOdomTF>
      <publishTf>1</publishTf>
    </plugin>
  </gazebo>
  <!-- camera -->
  <!-- changed type from camera to depth-->
  <gazebo reference="camera">
    <sensor name="camera1" type="depth">
      <update_rate>15.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.91986</horizontal_fov>
        <image>
          <width>2560</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <!-- change the plugin to a depth cam-->
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <!-- Keep this zero, update_rate in the parent <sensor> tag
          will control the frame rate. -->
        <updateRate>0.0</updateRate>
        <cameraName>camera_ir</cameraName>
        <imageTopicName>/camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudTopicName>/points2_2</pointCloudTopicName>
        <!-- /camera/depth/points -->
        <frameName>camera_link_optical</frameName>
        <pointCloudCutoff>0.3</pointCloudCutoff>
        <pointCloudCutoffMax>20</pointCloudCutoffMax>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
</robot>

